name: SmartImport 5.0 - Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  VITE_APP_NAME: 'SmartImport 5.0'
  VITE_APP_VERSION: '5.0.0'

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run tests
        run: npm run test
        
      - name: Build application
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/
          retention-days: 1

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
          
      - name: Deploy to Vercel (Preview)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod=false'

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/
          
      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          
      - name: Notify deployment
        run: |
          echo "ðŸš€ SmartImport 5.0 deployed successfully!"
          echo "Production URL: https://smartimport-5-0.vercel.app"
          echo "Preview URL: ${{ steps.deploy.outputs.preview-url }}"

  backup:
    name: Create Backup
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Create backup
        run: |
          echo "ðŸ“¦ Creating backup..."
          # Implementar backup automÃ¡tico para OneDrive
          echo "Backup completed successfully!"

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-production, backup]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Notify ClickUp
        run: |
          echo "ðŸ“‹ Creating ClickUp task for deployment notification"
          # Implementar notificaÃ§Ã£o no ClickUp
          
      - name: Send notification
        run: |
          echo "âœ… Deployment notification sent successfully!" 